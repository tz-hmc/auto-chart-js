const t=location.origin,o=e=>+e/16*1e3,c=e=>e/1e3/(1/16),e=[{keyCode:37,color:"#dbabff"},{keyCode:40,color:"#9494ff"},{keyCode:38,color:"#ff7a91"},{keyCode:39,color:"#6effbb"}],i=e=>new URL(e,t);let s=i("");s.protocol="ws:";class a extends HTMLElement{constructor(){super()}connectedCallback(){this.render()}render(){this.innerHTML=`
        <style>
            #spinner {
                width: 100%;
                height: 100%;
                border: 16px solid #f3f3f3;
                border-top: 16px solid #ff7a91;
                border-radius: 50%;
                margin: 0 -16px;
                animation: spin 3s linear infinite;
            }
            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }
        </style>
        <div id="spinner"></div>
        `}}customElements.get("loading-spinner")||customElements.define("loading-spinner",a);class n{keyCodes=e.map(e=>e.keyCode);notes=[];appChart=null;player=null;get score(){}get currNoteIndices(){}get CurrentNoteIndex(){return Math.floor(c(this.appChart?.songTimeMs||0))}CurrentKeyDown(e){return e in this.currNoteIndices}constructor(e,t,s){this.notes=e,this.appChart=t,this.player=s}start(){}stop(){}updateScore(){}}class r extends n{good=0;great=0;missing=0;extra=0;inputHistory=[];lastUpdateScoreIndex=0;localScore=0;localCurrNoteIndices={};get currNoteIndices(){return this.localCurrNoteIndices}get score(){return this.localScore}set score(e){this.localScore=e}constructor(e,t,s){super(e,t,s),this.inputHistory=new Array(this.notes.length).fill(null).map(()=>[])}start(){this.registerEventListeners()}stop(){this.removeEventListeners()}checkNoteValid(t,e){return e<this.inputHistory.length&&this.keyCodes.includes(t)&&!this.inputHistory[e].some(e=>e.keyCode===t)}addCurrentNote(e,t){e in this.currNoteIndices||!this.checkNoteValid(e,t)||(this.currNoteIndices[e]=t)}pushCurrentNote(e,t){var s;e in this.currNoteIndices&&this.checkNoteValid(e,t)&&(s=this.currNoteIndices[e],this.inputHistory[s].push({keyCode:e,length:t-s+1}),delete this.currNoteIndices[e])}registerEventListeners(){this.keydownListener=e=>{this.addCurrentNote(e.keyCode,this.CurrentNoteIndex)},this.keyupListener=e=>{this.pushCurrentNote(e.keyCode,this.CurrentNoteIndex)},document.addEventListener("keydown",this.keydownListener),document.addEventListener("keyup",this.keyupListener)}removeEventListeners(){document.removeEventListener("keydown",this.keydownListener),document.removeEventListener("keyup",this.keyupListener)}updateScore(){for(var e=this.CurrentNoteIndex,t=this.lastUpdateScoreIndex;t<e&&t<this.notes.length;t++){let e=this.notes[t].slice(0),s=this.inputHistory[t].slice(0),i=0<=t-1?this.inputHistory[t-1].slice(0):[],a=0<=t-2?this.inputHistory[t-2].slice(0):[],n=0;for(;0<e.length;){let t=e.pop();s.some(e=>e.keyCode===t.keyCode)?(this.great+=1,n+=1):i.some(e=>e.keyCode===t.keyCode)||a.some(e=>e.keyCode===t.keyCode)?(this.good+=1,n+=1):this.missing+=1}this.extra+=s.length-n,this.score=12*this.great+10*this.good-2*this.missing-+this.extra}this.lastUpdateScoreIndex=e,this.player.update({score:this.score,currNoteIndices:this.currNoteIndices})}}class h extends n{get score(){return this.player.score||0}get currNoteIndices(){return this.player.currNoteIndices||{}}constructor(e,t,s){super(e,t,s)}start(){console.log("remote start")}stop(){console.log("remote stop")}updateScore(){console.log("remote update score")}}const l=25;class d extends HTMLElement{get canvasHeight(){return this.offsetHeight-50}get canvasWidth(){return this.offsetWidth}get columnSize(){return this.offsetWidth/this.keys.length}get musicLength(){return o(this.notes.length)}get score(){return this.input?.score||0}get animationCallback(){return t=>e=>this.run(t,e)}get canvas(){return this.querySelector("canvas")}get context(){return this.canvas.getContext("2d")}get songTimeMs(){return this.animationStartDateNowMs-this.songStartDateNowMs+(this.lastAnimationMs-this.startAnimationMs)}constructor(){super(),this.reset()}setValues({isLocal:e,input:t}){this.isLocal=e,this.input=t}connectedCallback(){this.render(),this.rerender(),this.drawKeys()}reset(){this.notes=[],this.keys=e,this.lastAnimationMs=0,this.startAnimationMs=0,this.songStartDateNowMs=0,this.animationStartDateNowMs=0,this.isPlaying=!1,this.isLocal=!1,this.connectionManager=null,this.animationRequest=null}render(){this.innerHTML=`
            <canvas width="${this.canvasWidth}" height="${this.canvasHeight}"></canvas>
            <div id='score'>0</div>
        `}rerender(){this.isLocal&&this.setAttribute("class","local")}run(e,t=0){this.startAnimationMs||(this.startAnimationMs=t,this.animationStartDateNowMs=Date.now()),this.lastAnimationMs=t,this.update(this.songTimeMs)?this.animationRequest=requestAnimationFrame(this.animationCallback(e)):(console.log(this.lastAnimationMs-this.startAnimationMs),cancelAnimationFrame(this.animationRequest),this.input.stop(),e())}play(e,t=0){return this.songStartDateNowMs=t,this.notes=e,this.input.start(),this.isPlaying=!0,new Promise((e,t)=>{this.animationRequest=requestAnimationFrame(this.animationCallback(e))})}update(e){return!(e>=this.musicLength)&&(this.input.updateScore(),this.drawScore(),this.draw(e),!0)}drawKeys(){this.keys.forEach((e,t)=>{e=this.input.CurrentKeyDown(e.keyCode);this.drawKeyCircle(t,75,e)})}drawNoteCircle(e,t){let s=new Path2D;var i=this.columnSize*(e+.5);s.arc(i,t,l,0,2*Math.PI,!1),this.context.fillStyle=this.keys[e].color,this.context.fill(s)}drawKeyCircle(e,t,s=!1){let i=new Path2D;var a=this.columnSize*(e+.5);i.arc(a,t,l,0,2*Math.PI,!1),this.context.fillStyle=s?"#fefefe":"#f1f1f1",this.context.fill(i),this.context.strokeStyle=this.keys[e].color,this.context.lineWidth=1,this.context.stroke(i)}drawRoundRect(e,t,s){let i=new Path2D;var a=this.columnSize*(e+.5),n=45*s-50,r=a-l,s=a+l,a=t-l,n=t+l+n;i.moveTo(s,n),i.arcTo(r,n,r,a,l),i.arcTo(r,a,s,a,l),i.arcTo(s,a,s,n,l),i.arcTo(s,n,r,n,l),this.context.fillStyle=this.keys[e].color,this.context.fill(i)}drawNote(t,e,s){var i,a=s,n=s+(i=this.canvas.height,o(i/45)),r=o(e),s=o(e+t.length),i=(i=a,e=r,45*c(e-i));n<r||s<a||(a=this.keys.findIndex(e=>e.keyCode===t.keyCode),1==t.length?this.drawNoteCircle(a,i):this.drawRoundRect(a,i,t.length))}draw(s){this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.drawKeys(),this.notes.forEach((e,t)=>e.forEach(e=>this.drawNote(e,t,s)))}drawScore(){this.querySelector("#score").innerHTML=this.score}}customElements.get("app-chart")||customElements.define("app-chart",d);class p extends HTMLElement{playerManager=null;chart=[];songStartTimeMs=0;get flexContainer(){return this.shadow.querySelector("div.flex-container")}constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}setValues({playerManager:e,chart:t,songStartTimeMs:s}){this.playerManager=e,this.chart=t,this.songStartTimeMs=s}connectedCallback(){this.render()}render(){this.shadow.innerHTML=`
        <style>
            :host, .flex-container {
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                position: absolute;
            }
            .flex-container {
                display: flex;
                align-items: center;
                flex-direction: row;
                justify-content: space-around;
            }
            app-chart {
                width: calc(45%);
                height: calc(95%);
                border: 1px solid #e3e3e3;
            }
            app-chart.local {
                border: 2px solid white;
            }
        </style>
        <div class='flex-container'>
        </div>`}finishPlayCallback(){this.dispatchEvent(new CustomEvent("chart-page-play-stop",{bubbles:!0,cancelable:!1,composed:!0}))}createLocalChart(){let e=document.createElement("app-chart");e.setValues({isLocal:!0,input:new r(this.chart,e,this.playerManager.LocalPlayer)}),this.flexContainer.appendChild(e),e.play(this.chart,this.songStartTimeMs).then(()=>{this.finishPlayCallback()})}createRemoteCharts(){var e=this.playerManager.RemotePlayers[0];let t=document.createElement("app-chart");this.flexContainer.appendChild(t),t.setValues({isLocal:!1,input:new h(this.chart,t,e)}),t.play(this.chart,this.songStartTimeMs)}start(){this.createLocalChart(),this.createRemoteCharts()}remove(e){this.flexContainer.removeChild(e.element)}}customElements.get("chart-page")||customElements.define("chart-page",p);class u extends HTMLElement{setValues({numberPlayerBroadcast:e,finishedUpload:t}){this.numberPlayerBroadcast|=e,this.finishedUpload|=t,this.rerender()}get input(){return this.shadow.querySelector("input")}get readyButton(){return this.shadow.querySelector("button#ready")}get spinner(){return this.shadow.querySelector("loading-spinner")}get showReady(){return this.finishedUpload}get showSpinner(){return this.startedUpload&&!this.finishedUpload}get readyText(){return this.readyClicked?"waiting for second player":"ready"}constructor(){super(),this.reset(),this.shadow=this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.rerender(),this.registerEventListeners()}reset(){this.numberPlayerBroadcast=0,this.startedUpload=!1,this.finishedUpload=!1,this.readyClicked=!1}render(){this.shadow.innerHTML=`
        <style>
            :host, .flex-container {
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                position: absolute;
            }
            .flex-container {
                display: flex;
                align-items: center;
                flex-direction: column;
                justify-content: center;
            }
            .flex-container > * {
                margin-bottom: 10px;
            }
            .flex-container > input {
                padding: 3px;
                border: 1px solid white;
            }
            loading-spinner {
                height: 60px;
                width: 60px;
            }
        </style>
        <div class='flex-container'>
            <p>select a mp3</p>
            <input id="file-input" type="file"></input>
            <button id="ready"></button>
            <loading-spinner></loading-spinner>
        </div>`}rerender(){this.readyButton.hidden=!this.showReady,this.readyButton.textContent=this.readyText,this.spinner.hidden=!this.showSpinner}registerEventListeners(){this.input.onchange=e=>{this.startedUpload=!0,this.rerender();const t=new FileReader;for(var s of this.input.files)t.readAsArrayBuffer(s);t.onload=e=>{this.buffer=t.result,this.upload()}},this.readyButton.onclick=()=>{this.readyClicked=!0,this.rerender(),this.dispatchEvent(new CustomEvent("input-page-ready-click",{bubbles:!0,cancelable:!1,composed:!0}))}}upload(){this.dispatchEvent(new CustomEvent("input-page-file-upload",{bubbles:!0,cancelable:!1,composed:!0,detail:{buffer:this.buffer}}))}}customElements.get("input-page")||customElements.define("input-page",u);class g extends HTMLElement{localScore=0;enemyScore=0;setValues({localScore:e,enemyScore:t}){this.localScore=e,this.enemyScore=t}constructor(){super(),this.shadow=this.attachShadow({mode:"open"})}connectedCallback(){this.render()}reset(){this.localScore=0,this.enemyScore=0}render(){this.shadow.innerHTML=`
        <style>
            :host, .flex-container {
                top: 0;
                left: 0;
                height: 100%;
                width: 100%;
                position: absolute;
            }
            .flex-container {
                display: flex;
                align-items: center;
                flex-direction: row;
                justify-content: center;
            }
            .flex-container > * {
                margin: 50px;
            }
            .winner {
                animation: blink 1s ease-in infinite;
            }
            @keyframes blink {
                0% {
                    border: 6px dashed yellow;
                }
                100% {
                    border: 1px dotted white;
                }
            }
            .loser {
                border: 1px dashed white;
            }
            .score {
                border-radius: 40%;
                padding: 20px;
            }
        </style>
        <div class='flex-container'>
            <div class='${this.localScore>this.enemyScore?"winner":"loser"} score'>${this.localScore}</div>
            <div class='${this.enemyScore>this.localScore?"winner":"loser"} score'>${this.enemyScore}</div>
        </div>`}}customElements.get("score-page")||customElements.define("score-page",g);class m{constructor(){this.fileBuffer=null,this.chart=[]}async uploadMp3(e,t){try{await fetch((s=e,i(`song/${s}`)),{method:"PUT",headers:{"Content-Type":"audio/mpeg"},body:t})}catch(e){alert("Please check file format (should be mp3) and size (12MB limit).")}var s}async downloadMp3(e){let t=await fetch((e=e,i(`songs/${e}.mp3`)),{method:"GET"});this.fileBuffer=await t.arrayBuffer()}async downloadChart(e){let t=await fetch((e=e,i(`charts/${e}.json`)),{method:"GET"});return this.chart=await t.json(),this.chart}async playMp3(){let e=new AudioContext;const t=e.createBufferSource();t.buffer=await e.decodeAudioData(this.fileBuffer),t.connect(e.destination),t.start()}}class y{constructor(e="",t){this.clientId=e,this.connectionManager=t,this.score=0}update({score:e}){this.score=e}}class f extends y{update({score:e,currNoteIndices:t}){super.update({score:e}),this.connectionManager.sendUpdate({score:e,currNoteIndices:t})}}class C extends y{constructor(e,t){super(e,t),this.connectionManager.setCallback({playerUpdate:this.update.bind(this)})}update({score:e,currNoteIndices:t}){super.update({score:e}),this.currNoteIndices=t}}class w{get LocalPlayer(){return this.localPlayer}get RemotePlayers(){return Object.values(this.remotePlayers)}constructor(){this.remotePlayers={},this.localPlayer=null}addLocal(e,t){this.localPlayer=new f(e,t)}addRemote(e,t){this.remotePlayers[e]=new C(e,t)}updateRemote({clientId:e,...t}){e in this.remotePlayers?this.remotePlayers[e].update(t):console.error("client id is not recognized")}removeRemote(e){delete this.remotePlayers[e]}}const b=["input-page","chart-page","score-page"];class k extends HTMLElement{pageIndex=0;connectionManager=new class{constructor(){this.playerManager=new w,this.conn=null,this.roomCode="",this.callbacks={}}isConnected(){return!!this.conn&&0<this.roomCode.length}setCallback({create:e,join:t,broadcast:s,songReady:i,roomReady:a,gameBroadcast:n}){this.callbacks={create:e,join:t,broadcast:s,songReady:i,roomReady:a,gameBroadcast:n,...this.callbacks}}connect(e=s){this.conn=new WebSocket(e),this.conn.addEventListener("open",()=>{this.initRoom()}),this.conn.addEventListener("message",e=>{console.log(`message: ${e.data}`);e=this.receive(e.data);"room-created"===e.type?(this.setRoom(e.roomCode),this.callbacks?.create&&this.callbacks.create(e)):"room-joined"===e.type?(this.setRoom(e.roomCode),this.callbacks?.join&&this.callbacks.join(e)):"room-broadcast"===e.type?(this.setPlayers(e.peers),this.callbacks?.broadcast&&this.callbacks.broadcast(e)):"song-ready"===e.type?this.callbacks?.songReady&&this.callbacks.songReady(e):"room-ready"===e.type?this.callbacks?.roomReady&&this.callbacks.roomReady(e):"game-broadcast"===e.type&&(this.playerManager.updateRemote(e),this.callbacks?.gameBroadcast&&this.callbacks.gameBroadcast(e))})}setPlayers(e){const t=e.you,s=e.peers.filter(e=>t!==e);this.playerManager.addLocal(t,this),s.forEach(e=>{this.playerManager.addRemote(e,this)})}receive(e){return JSON.parse(e)}send(e){e=JSON.stringify(e);console.log(`sending message ${e}`),this.conn.send(e)}sendCreate(){this.send({type:"create-room"})}sendJoin(){this.send({type:"join-room",roomCode:this.roomCode})}sendReady(){this.send({type:"ready",roomCode:this.roomCode})}sendUpdate({score:e,currNoteIndices:t}){this.send({type:"game-update",score:e,currNoteIndices:t})}sendFinish(){this.send({type:"game-finish"})}initRoom(){this.roomCode=window.location.hash.split("#")[1],this.roomCode?this.sendJoin():this.sendCreate()}setRoom(e){this.roomCode=e,window.location.hash=this.roomCode}};fileManager=new m;constructor(){super(),this.reset(),this.registerEventListeners()}connectedCallback(){this.render(),this.connectionManager.setCallback({broadcast:this.broadcastCallback.bind(this),songReady:this.songReadyCallback.bind(this),roomReady:this.roomReadyCallback.bind(this)}),this.connectionManager.connect()}reset(){this.pageIndex=0,this.localChart=[]}render(){this.innerHTML=`
            <div>
                ${0===this.pageIndex?"<input-page></input-page>":""}
                ${1===this.pageIndex?"<chart-page></chart-page>":""}
                ${2===this.pageIndex?"<score-page></score-page>":""}
            </div>
        `}getRef(e){return this.querySelector(e)}broadcastCallback({}){this.getRef("input-page")?.setValues({finishedBroadcast:!0})}async songReadyCallback({}){await Promise.all([this.fileManager.downloadChart(this.connectionManager.roomCode),this.fileManager.downloadMp3(this.connectionManager.roomCode)]),this.getRef("input-page")?.setValues({finishedUpload:!0})}async roomReadyCallback({}){await this.fileManager.playMp3();var e=Date.now();this.goNextPage(),this.getRef("chart-page")?.setValues({playerManager:this.connectionManager.playerManager,chart:this.fileManager.chart,songStartTimeMs:e}),this.getRef("chart-page")?.render(),this.getRef("chart-page")?.start()}registerEventListeners(){this.addEventListener("input-page-file-upload",this.onFileUploadClicked.bind(this)),this.addEventListener("input-page-ready-click",this.onReadyClicked.bind(this)),this.addEventListener("chart-page-play-stop",this.onPlayStopped.bind(this))}goNextPage(){this.pageIndex=this.pageIndex===b.length-1?this.pageIndex:this.pageIndex+1,this.render()}onFileUploadClicked({detail:{buffer:e}}){this.fileManager.uploadMp3(this.connectionManager.roomCode,e)}onReadyClicked({}){this.connectionManager.sendReady()}onPlayStopped({}){var e=this.connectionManager.playerManager.LocalPlayer.score,t=this.connectionManager.playerManager.RemotePlayers.map(e=>e.score);this.goNextPage(),this.getRef("score-page")?.setValues({localScore:e,enemyScore:t[0]}),this.getRef("score-page")?.render(),this.connectionManager.sendFinish()}}customElements.get("page-manager")||customElements.define("page-manager",k);